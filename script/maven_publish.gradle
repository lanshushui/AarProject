apply plugin: 'maven-publish'

// 上传源码的 task
task androidSourcesJar(type: Jar) {
    // 如果有Kotlin那么就需要打入dir : getSrcDirs
    if (project.hasProperty("kotlin")) {
        println '====> project kotlin'
        from android.sourceSets.main.java.getSrcDirs()
    } else if (project.hasProperty("android")) {
        println '====> project java'
        from android.sourceSets.main.java.sourceFiles
    } else {
        println '====> project java & kotlin'
        from sourceSets.main.allSource
    }
    archiveClassifier = "code-sources"
}
def aarConfigManager = gradle.ext.aarConfigManager

afterEvaluate {
    def GROUP_ID = aarConfigManager.getGroupId(it)
    def ARTIFACT_ID = aarConfigManager.getArtifactId(it)
    def VERSION = aarConfigManager.getVersion(it)
    publishing {
        // 配置maven 仓库
        repositories { RepositoryHandler handler ->
            handler.maven {
                url "${rootDir}/local_repo/"
            }
        }
        publications { PublicationContainer publicationContainer ->
            debug(MavenPublication) {
                //可以通过 println("Components: " + components*.name) 看有哪些组件
                from components.debug
//                artifact androidSourcesJar // 上传源码
                groupId = GROUP_ID
                artifactId = ARTIFACT_ID
                version = VERSION
            }
            release(MavenPublication) {
                from components.release
//                artifact androidSourcesJar // 上传源码
                groupId = GROUP_ID
                artifactId = ARTIFACT_ID
                version = VERSION
            }
            /**
             * * What went wrong:
             A problem was found with the configuration of task ':library1:sourceJar' (type 'Jar').
             - Gradle detected a problem with the following location:
             'C:\AarProject\library1\build\libs\library1-sources.jar'.

             Reason: Task ':library1:generateMetadataFileForReleasePublication'
             uses this output of task ':library1:sourceJar'
             without declaring an explicit or implicit dependency. This can lead to incorrect results being
             produced, depending on what order the tasks are executed.
             */
            //在这里之后才能找到generateMetadataFileForReleasePublication任务
//            tasks.named("generateMetadataFileForDebugPublication"){
//                dependsOn "androidSourcesJar"
//            }
//            tasks.named("generateMetadataFileForReleasePublication"){
//                dependsOn "androidSourcesJar"
//            }
        }
    }
}