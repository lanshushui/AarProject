apply plugin: 'maven-publish'

// 上传源码的 task
task androidSourcesJar(type: Jar) {
    // 如果有Kotlin那么就需要打入dir : getSrcDirs
    if (project.hasProperty("kotlin")) {
        //println '====> project kotlin'
        from android.sourceSets.main.java.getSrcDirs()
    } else if (project.hasProperty("android")) {
        //println '====> project java'
        from android.sourceSets.main.java.sourceFiles
    } else {
        //println '====> project java & kotlin'
        from sourceSets.main.allSource
    }
    archiveClassifier = "code-sources"
}
def aarConfigManager = gradle.ext.aarConfigManager

afterEvaluate {
    String GROUP_ID = aarConfigManager.getGroupId(it)
    String ARTIFACT_ID = aarConfigManager.getArtifactId(it)
    publishing {
        // 配置maven 仓库
        repositories { RepositoryHandler handler ->
            handler.maven {
                url "${rootDir}/local_repo/"
            }
        }
        publications { PublicationContainer publicationContainer ->
            release(MavenPublication) {
                if(isAndroidPlugin(project)){
                    from components.release
                }else if(isJavaPlugin(project)){
                    from components.java
                }
//                artifact androidSourcesJar // 上传源码
                groupId = GROUP_ID
                artifactId = ARTIFACT_ID
                def mVersion = project.hasProperty('version') ? project.version : '1.0.0'
                version = mVersion
            }
        }
    }
    it.apply  from: file("${rootDir}/script/publishAAr_SP.gradle")
}